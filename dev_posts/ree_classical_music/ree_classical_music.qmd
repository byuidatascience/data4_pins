---
title: "REE Classical Music"
author: "MATH 221"
date: "2024-05-01"
categories: [music, psychology, health]
description: "Obesity is a growing problem worldwide.  Many scientists are seeking creative solutions to trim down this epidemic.  Reduced energy expenditure is a potential cause of obesity.  Resting energy expenditure (REE) is defined as the amount of energy a person would use if resting for 24 hours.  In essence, this is the amount of energy that a person's body will consume if they do not do any physical activity.  REE is measured in terms of kilojoules per day (kJ/d).  REE accounts for approximately 70 to 80% of all energy that a person will expend in a day.  If researchers can find simple, enjoyable activities that will increase REE, it may be possible to minimize the spread of obesity around the world.  Ebba Carlsson and other researchers in Sweden investigated the effect of listening to stressful classical music on a person's REE.\nThe REE was measured by indirect calorimetry using the Deltatrac II Metabolic Monitor.  Each subject's REE was measured during silence and again while listening to stressful classical music.\nThe “stressful” classical music included:\nBéla Bartók’s String Quartet No. 4 : Prestissimo, con sordino\nIgor Stravinsky’s “Infernal Dance of all Kashchei’s Subjects” from The Firebird\nHans Werner Henze’s “Dies Irae,” second movement from Requiem: Nine Sacred Concertos for Piano, Trumpet Concertante and Chamber Orchestra\nDataset consists of simulated data matching reported summary statistics. "
params: 
    source: "Ebba Carlsson, Hannah Helgegren, and Frode Slinde. Resting energy expenditure is not influenced by classical music. Journal of Negative Results in BioMedicine, 4:6, 2005.  "
    pins_name: 'hathawayj/ree_classical_music'
    available: all
---


```{r}a
#| echo: false
title <- params$title
description <- params$description
source <- params$source
pins_url <- params$pins_url
```

# `r params$title`

`r params$description`

```{python}
#| tags: [parameters]
#| echo: false
title = r.title
description = r.description
source = r.source
pins_url = r.pins_url

```


## Data details

```{r}
#| echo: false
#| warning: false
# https://aeturrell.github.io/skimpy/ python skimr for Python
library(pins)
library(tidyverse)
library(skimr)
library(arrow)
board <- board_connect()
dat <- pin_read(board, params$pins_name)
meta <- pin_meta(board, params$pins_name)
url_path <- meta$local$url
file_name <- meta$file
object_name <- rev(unlist(str_split(meta$name, "/")))[[1]]
url_download <- paste0(
    str_remove(
        url_path,
        paste0(
            rev(unlist(str_split(url_path, "/")))[2],
            "/")),
    file_name)
```

There are __`r prettyNum(nrow(dat), big.mark = ",", scientific = FALSE)` rows__ and __`r ncol(dat)` columns__. The data source[^1] is used to create our data that is stored in our [pins table](`r meta$local$url`). You can access this pin from a connection to [posit.byui.edu](https://posit.byui.edu) using ``r params$pins_name``.

This data is available to __`r params$available`__.

### Variable description

- __Silence__ Resting Energy Expenditure (REE) during silence (kilojoules per day)
- __Stressful__ REE during stressful classical music in kilojoules per day
- __Difference__ Difference between the two REEs


### Variable summary

```{r}
#| echo: false
#| warning: false
skim(dat) |> yank("numeric")
```


```{r}
#| echo: false
#| warning: false
skim(dat) |> yank("character")
```

```{r}
#| echo: true
#| eval: false
#| code-fold: true
#| code-summary: Explore generating code using R
#| code-line-numbers: true
#| file: ../../../data_scripts/ree_classical_music.R
```

<!-- ```{python}
#| echo: true
#| eval: false
#| code-fold: true
#| code-summary: Explore generating code using Python
#| code-line-numbers: true
#| file: ../../../data_scripts/YOURFILEPATH
``` -->


## Access data

This data is available to __`r params$available`__.

__Direct Download:__ [`r file_name`](`r url_download`)

#### __R and Python Download:__

##### __URL Connections:__

For public data, any user can connect and read the data using `pins::board_connect_url()` in R.

```r
library(pins)
url_data <- "https://posit.byui.edu/data/`r object_name`/"
board_url <- board_connect_url(c("dat" = url_data))
dat <- pin_read(board_url, "dat")
```

Use this custom function in Python to have the data in a Pandas DataFrame.

```python
import pandas as pd
import requests
from io import BytesIO

def read_url_pin(name):
  url = "https://posit.byui.edu/data/" + name + "/" + name + ".parquet"
  response = requests.get(url)
  if response.status_code == 200:
    parquet_content = BytesIO(response.content)
    pandas_dataframe = pd.read_parquet(parquet_content)
    return pandas_dataframe
  else:
    print(f"Failed to retrieve data. Status code: {response.status_code}")
    return None

# Example usage:
pandas_df = read_url_pin("`r object_name`")
```

#### __Authenticated Connection:__

Our connect server is [https://posit.byui.edu](https://posit.byui.edu/connect/#/content/listing?filter=min_role:viewer&filter=content_type:all&view_type=compact) which you assign to your `CONNECT_SERVER` environment variable. You must [create and API key](https://docs.posit.co/connect/user/api-keys/#api-keys-creating) and store it in your environment under `CONNECT_API_KEY`. 

_Read more about [environment variables and the pins package](../../environment.qmd) to understand how these environment variables are stored and accessed in R and Python with pins._

```r
library(pins)
board <- board_connect(auth = "auto")
dat <- pin_read(board, "`r params$pins_name`")
```


```python
import os
from pins import board_rsconnect
from dotenv import load_dotenv
load_dotenv()
API_KEY = os.getenv('CONNECT_API_KEY')
SERVER = os.getenv('CONNECT_SERVER')

board = board_rsconnect(server_url=SERVER, api_key=API_KEY)
dat = board.pin_read("`r params$pins_name`")
```

[^1]: [`r params$source`](`r params$source`)